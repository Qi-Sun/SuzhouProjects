001001110 True True 010101010
001100010 True True 010001100
011101110 True True --
0001001001011010 True True 0100101001010010
0001001010000100 True True 0100001000011000
0001001010010110 True True 0100001111000010 0100001100011100
0011001111001100 True True --
0011100101011110 True True --
0011100111000110 True True --
0111101111011110 True True --
0000100010000110110010100 True True 0100010100010100010100010
0000100010000111010001100 True True 0100000101010101010000010 0100000110010010000110100 0100000101000101000101010
0000100010010100010110100 True True 0100010100000110110000010 0100010100000110000101100 0100000110110000010100010 01000001010001011000
0000100011000110110011100 True True 0100010101010100010101010
0000100011000110110111110 True True 0100010111010110110001101 0100010111010100110101010 0100010111010010100101110
0000100011000111110001110 True True 
0000100011100000100101110 True True
0000100011100100110001100 True True
0000100111010110110111110 True True
0001100011000111110011100 True True
0001100011010011010011100 True True
0001100101010011000111110 True True
0001100101010101010011000 True True
0001100101010101010111010 True True
0001100101010101100110110 True True
0001100101100100110111010 True True
0001100111010111110011100 True True
0001100111110000110111010 True True
0001110011110000110101110 True True
0011100111110011100111110 True True
0011100111110011110011010 True True
0011110011010111110111110 True True
0011110011110010110111110 True True
0111110111110111110111110 True True


添加距离的判断

1. 去头去尾
将第一个长居地之前部分去掉，将最后一个长居地之后部分去掉
2. 去除无用重复长居地
将连续出现的多个长居地中间去掉，所以列表中最终只存在两个连续的长居地
3. 按时间间隔分割
按时间阈值到列表中将连续两个地点超过阈值的行为分割，此时结果不再记录时间
4. 按长居地分割
对时间分割的结果按长居地分割一遍，如果出现在时间分割结果的中间，将再次分割
5. 对分割后的行为处理
a. 合并相邻点 b. 删除无效路线（只包含长居地，因为两次长居地的时间可能相近或者超出阈值分成两条路线）